name: jade-setup

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]
  workflow_dispatch:

jobs:
  run-jade-application:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'adopt'

      - name: Create directory structure
        run: |
          mkdir -p agent_output/IterationResults/small
          mkdir -p agent_output/rtt_logs/small
          mkdir -p agent_output/PerformanceLogs/MetricsAnalysis/small
          mkdir -p scenarios/small

      - name: Check existing scenario files
        id: check_files
        run: |
          if [ -f "scenarios/small/salas.json" ] && [ -f "scenarios/small/profesores.json" ]; then
            echo "Scenario files found, using existing files"
            echo "files_exist=true" >> $GITHUB_OUTPUT
          else
            echo "Scenario files not found, will create sample files"
            echo "files_exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Prepare input files for small scenario
        if: steps.check_files.outputs.files_exist != 'true'
        run: |
          # Create necessary scenario files (salas.json and profesores.json)
          echo '[{"Codigo":"K101","Campus":"Kaufmann","Capacidad":40,"Turno":1},{"Codigo":"K102","Campus":"Kaufmann","Capacidad":30,"Turno":1},{"Codigo":"P201","Campus":"Playa Brava","Capacidad":50,"Turno":1}]' > scenarios/small/salas.json
          echo '[{"Nombre":"Prof1","RUT":"12345678-9","Turno":1,"Asignaturas":[{"CodigoAsignatura":"CS101","Nombre":"Intro to CS","Nivel":1,"Paralelo":"A","Horas":2,"Vacantes":35,"Campus":"Kaufmann","Actividad":"TEORIA"}]},{"Nombre":"Prof2","RUT":"98765432-1","Turno":1,"Asignaturas":[{"CodigoAsignatura":"CS102","Nombre":"Data Structures","Nivel":2,"Paralelo":"A","Horas":2,"Vacantes":25,"Campus":"Kaufmann","Actividad":"TEORIA"},{"CodigoAsignatura":"CS103","Nombre":"Algorithms","Nivel":3,"Paralelo":"A","Horas":2,"Vacantes":45,"Campus":"Playa Brava","Actividad":"TEORIA"}]}]' > scenarios/small/profesores.json
          echo "Created sample scenario files"

      # Verify library files exist and show their details
      - name: Verify library files
        run: |
          echo "Checking JADE libraries:"
          ls -la lib/jade/
          echo "Checking JSON libraries:"
          ls -la lib/json/
          echo "Total library count:"
          find lib -name "*.jar" | wc -l

      # Store the absolute path of the project root
      - name: Set workspace path
        run: |
          echo "WORKSPACE_PATH=$(pwd)" >> $GITHUB_ENV

      # Compile Java classes with absolute path for classpath
      - name: Compile Java classes
        run: |
          mkdir -p build
          ABSOLUTE_CLASSPATH="$WORKSPACE_PATH/lib/jade/jade.jar:$WORKSPACE_PATH/lib/jade/jadeExamples.jar:$WORKSPACE_PATH/lib/json/jackson-annotations-2.18.0.jar:$WORKSPACE_PATH/lib/json/jackson-core-2.18.0.jar:$WORKSPACE_PATH/lib/json/jackson-databind-2.18.0.jar:$WORKSPACE_PATH/lib/json/javax.json-api-1.1-javadoc.jar:$WORKSPACE_PATH/lib/json/json-lib-2.4-jdk15.jar:$WORKSPACE_PATH/lib/json/json-simple-1.1.1.jar:$WORKSPACE_PATH"
          echo "Using classpath: $ABSOLUTE_CLASSPATH"
          javac -d build -cp "$ABSOLUTE_CLASSPATH" $(find . -name "*.java")
          echo "ABSOLUTE_CLASSPATH=$ABSOLUTE_CLASSPATH" >> $GITHUB_ENV

      # Run the application without changing directory and with absolute paths
      - name: Run JADE application with IterativeAplicacion
        run: |
          # Run from the project root with explicit paths
          java -cp "$ABSOLUTE_CLASSPATH:$WORKSPACE_PATH/build" aplicacion.IterativeAplicacion 1 small

      # Alternative approach if above doesn't work
      - name: Alternative run approach (if needed)
        if: failure()
        run: |
          # Copy all JAR files to the build directory
          mkdir -p build/lib/jade build/lib/json
          cp lib/jade/*.jar build/lib/jade/
          cp lib/json/*.jar build/lib/json/
          cd build
          # Now run with relative paths that work from build directory
          java -cp "./lib/jade/jade.jar:./lib/jade/jadeExamples.jar:./lib/json/jackson-annotations-2.18.0.jar:./lib/json/jackson-core-2.18.0.jar:./lib/json/jackson-databind-2.18.0.jar:./lib/json/javax.json-api-1.1-javadoc.jar:./lib/json/json-lib-2.4-jdk15.jar:./lib/json/json-simple-1.1.1.jar:." aplicacion.IterativeAplicacion 1 small

      - name: Store generated output files
        uses: actions/upload-artifact@v4
        with:
          name: jade-output
          path: |
            agent_output/small/Horarios_asignados.json
            agent_output/small/Horarios_salas.json
            agent_output/IterationResults/small/